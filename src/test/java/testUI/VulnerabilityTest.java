package testUI;

import config.EnvironmentConfig;
import config.OwaspConfig;
import factoryRequest.FactoryRequest;
import factoryRequest.ResponseInformation;
import io.qameta.allure.*;
import org.json.JSONObject;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Order;
import org.junit.jupiter.api.Test;

public class VulnerabilityTest {

    private static final String GET ="get";
    private static final String SCAN="scan";
    private static final String STATUS="status";
    String idScan;

    @DisplayName("Verify the scanning using owasp zap")
    @Owner("JBGroup")
    @Epic("Vulnerability Testing")
    @Feature("Culnerability")
    @Description("this test is to execute the scanning ..........")
    @Link("JIRA00001")
    @Issue("BUG00001")
    @Story("55555")
    @Order(2)
    @Test
    public void verifyVulnerabilityTesting() throws InterruptedException {
        idScan = startScanning();
        waitCompleteVulnerabilityScanning(idScan);
    }

    @AfterEach
    private void after(){
        ResponseInformation responseInformation;

        responseInformation=FactoryRequest.make(GET).send(OwaspConfig.READ_ALERTS+EnvironmentConfig.host,"");
        this.attachFile("ATTACH > Alert owasp zap",responseInformation.getBody());

        responseInformation=FactoryRequest.make(GET).send(OwaspConfig.READ_LIST_ATTACK+idScan,"");
        this.attachFile("ATTACH > List attacked owasp zap",responseInformation.getBody());

        responseInformation=FactoryRequest.make(GET).send(OwaspConfig.GENERATE_REPORT,"");
        this.attachFile("ATTACH > Report Vulnerability OWASP ZAP",responseInformation.getBody());
    }

    @Attachment(value = "{0}",type = "text/html")
    public String attachFile(String nameFile,String content){
        return content;
    }

    @Step("Executing Scanning, waiting it will be completed 100%")
    private void waitCompleteVulnerabilityScanning(String idScan) throws InterruptedException {
        ResponseInformation responseInformation;
        responseInformation=FactoryRequest.make(GET).send(OwaspConfig.CHECK_STATUS+ idScan,"");
        String status= new JSONObject(responseInformation.getBody()).get(STATUS).toString();

        while (!status.equals("5")){
            Thread.sleep(10000);
            responseInformation=FactoryRequest.make(GET).send(OwaspConfig.CHECK_STATUS+ idScan,"");
            status= new JSONObject(responseInformation.getBody()).get(STATUS).toString();
            System.out.println("Status Progress : ["+status+"%]....");
            responseInformation=FactoryRequest.make(GET).send(OwaspConfig.READ_ALERTS+ EnvironmentConfig.host,"");
        }
    }

    @Step("Selecting SUT and starting scanning using OWASP ZAP ")
    private String startScanning() {
        ResponseInformation responseInformation;
        responseInformation=FactoryRequest.make(GET).send( OwaspConfig.START_SCANNING+ EnvironmentConfig.host,"");

        String idScan= new JSONObject(responseInformation.getBody()).get(SCAN).toString();
        return idScan;
    }




}


